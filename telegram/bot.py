import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import BotCommand

from config import config
from routes import get_router
from routes import cat_router
from routes import nasa_router
from database import ORMManager, Student

db = ORMManager("sqlite:///school_data.db", Student)
bot = Bot(token=config.TELEGRAM_TOKEN)
dp = Dispatcher()


async def main():
    db.create_table()

    commands = [
        BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="add", description="–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞: /add <–∏–º—è> <–≤–æ–∑—Ä–∞—Å—Ç> <–∫–ª–∞—Å—Å>"),
        BotCommand(command="get", description="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–ª–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º"),
        BotCommand(command="help", description="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞"),
        BotCommand(command="links", description="–ö–Ω–æ–ø–∫–∏ —Å —Å—Å—ã–ª–∫–∞–º–∏"),
        BotCommand(command="nasa", description="–ü–æ–ª—É—á–∏—Ç—å —Å–Ω–∏–º–æ–∫"),
        BotCommand(command="cat", description="–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ—Ç–∏–∫–∞")

    ]

    await bot.set_my_short_description("üìö –ë–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏")
    await bot.set_my_commands(commands)

    dp.include_router(get_router(db))
    dp.include_router(nasa_router)
    dp.include_router(cat_router)

    await dp.start_polling(bot)

    await bot.session.close()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é")
